import fs from "fs"
import clog, { ClogColor } from "./clog"
import { BKP_DIR, NOW, RELOAD_MESSAGE, ZSHRC_PATH } from "./envs"

export default () => {
    const bkpDirExists = fs.existsSync(BKP_DIR)
    !bkpDirExists && fs.mkdirSync(BKP_DIR)

    try {
        fs.copyFileSync(ZSHRC_PATH, `${BKP_DIR}/zshrc_${NOW}`)
    } catch (error) {
        if (error instanceof Error) {
            console.error(error.message)
            process.exit(1)
        }
    }

    try {
        const zshrcContent = fs.readFileSync(ZSHRC_PATH).toLocaleString()
        const header = '# BEGIN - GENERATED BY ALIASES CLI'
        const source = 'source $HOME/.aliases'
        const content = `\n${header}\n${source}`
        if (!zshrcContent.includes(content)) {
            fs.appendFileSync(ZSHRC_PATH, content)
            clog(RELOAD_MESSAGE, ClogColor.yellow)
            process.exit()
        }
    } catch (error) {
        if (error instanceof Error) {
            console.error(error.message)
            process.exit(1)

        }
    }

}